class World

types
    public Angle = real inv N == N >= 0 and N <= 1.6; -- begrænsning N ca 0 til 90 grader

instance variables
    io : IO := new IO();

operations
    public echoState : (nat) ==> ()
    echoState(counter) == (
        dcl str : seq of char := "";
        str := str ^ "Time count: ";
        str := str ^ VDMUtil`val2seq_of_char[nat](counter);
        str := str ^ "\nCurrent Position (rad): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`arm.env_q);
        str := str ^ "\nTarget Position (rad): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`arm.env_qt);
        str := str ^ "\nVelocity (rad/s): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`arm.q_vel);
        str := str ^ "\nAcceleration (rad/s^2): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`arm.q_acc);
        str := str ^ "\nMotor Torque (Nm): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`arm.env_motorTorque);
        str := str ^ "\nProportional Factor (Kp): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`controller.kp);
        str := str ^ "\nDerivative Factor (Kd): ";
        str := str ^ VDMUtil`val2seq_of_char[real](MySystem`controller.kd);
        str := str ^ "\n\n";

        def - = io.echo(str) in skip; -- ignore the return value
    );

    -- scenario 1 - dampening at safety zones. 
    public Scenario1 : () ==> bool
    Scenario1() == (
        dcl StepCount : nat := 0;
        MySystem`arm.SetCurrentPosition(1.7); -- nær øvre sikkerhedsgrænse
        MySystem`arm.SetTargetPosition(1.9); -- forsøger at flytte udenfor sikkerhedszone
        MySystem`controller.SetKp(0.1);
        MySystem`controller.SetKd(0.01);

        while StepCount < 500 do ( 
            MySystem`controller.MonitorAngle();
            MySystem`controller.CalculateData();
            MySystem`controller.TorqueValue();
            MySystem`arm.Step(1);
            echoState(StepCount);
            StepCount := StepCount + 1;
        );

        return true;
    );


    -- scenario 2 - Acceleration with big deviation
    public Scenario2 : () ==> bool
    Scenario2() == (
        dcl StepCount : nat := 0;
        MySystem`arm.SetCurrentPosition(0); -- Start langt fra målpositionen
        MySystem`arm.SetTargetPosition(1.6); -- Målpositionen for at fremprovokere acceleration
        MySystem`controller.SetKp(0.1);
        MySystem`controller.SetKd(0.01);

        while StepCount < 500 do ( 
            MySystem`controller.MonitorAngle();
            MySystem`controller.CalculateData();
            MySystem`controller.TorqueValue();
            MySystem`arm.Step(1);
            echoState(StepCount);
            StepCount := StepCount + 1;
        );

        return true;
    );


end World