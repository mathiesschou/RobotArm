class RobotArm

types
    public Angle = real inv N == N >= -0.2 and N <= 1.8; -- begrænsning N ca 0 til 90 grader

values 
    public r: real = 0.8; -- arm lægnde i m

instance variables
    public env_q : real; -- angle of roint. radianer
    public env_qt : real; -- target angle. radianer 
    public q_vel: real; -- hastighed. rad/s
    public q_acc: real; -- acceleration. rad/s^2
    --! PID controller

    public accumulatedTime: real; -- simuleret tid

operations
    public RobotArm: () ==> RobotArm
    RobotArm() == (
        env_q := 0;
        env_qt := 0;
        q_vel := 0; 
        q_acc := 0; 
        accumulatedTime := 0; 
    );

    --! Set Position angle
    public SetTargetPosition: Angle ==> ()
    SetTargetPosition(target) == (
        env_qt := target;
    );

    public SetCurrentPosition: Angle ==> ()
    SetCurrentPosition(position) == (
        env_q := position;
    );

    --! Step function
    public Step: real ==> ()
    Step(delta) == duration(0) (
            -- Retrieve motorTorque and I from the controller
            dcl motorTorque: real := MySystem`controller.GetMotorTorque();
            dcl I: real := MySystem`controller.GetI();
            
            -- Update movement values
            q_acc := motorTorque / I; -- Assuming uniform mass distribution arm length meter. a = t / i
            q_vel := q_vel + q_acc * delta;
            env_q := env_q + q_vel * delta;

            -- Update time
            accumulatedTime := accumulatedTime + delta;
    );
end RobotArm