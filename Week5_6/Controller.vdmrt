class Controller

instance variables

    public ctl_q: real; 
    public ctl_motorOn: bool := false;

operations
-- Test 
 public SetTargetPosition: RobotArm`Angle ==> ()
    SetTargetPosition(target) == (
        MySystem`arm.SetTargetPosition(target);
    );
-- Test
    public SetCurrentPosition: RobotArm`Angle ==> ()
    SetCurrentPosition(position) == (
        MySystem`arm.SetCurrentPosition(position);
    );
-- Test
    public SetKp: real ==> ()
    SetKp(k_p) == (
        MySystem`arm.SetKp(k_p);
    );
-- Test
    public SetKd: real ==> ()
    SetKd(k_d) == (
        MySystem`arm.SetKd(k_d);
    );

-- Not touch
    public Controller : () ==> Controller
    Controller () ==( 
        ctl_q := 0;
        ctl_motorOn := false;
    ); 

    public CheckArmReady: () ==> bool
    CheckArmReady() == (
        return MySystem`arm.IsReady();
    );

    public MonitorAngle : () ==> ()
    MonitorAngle() == duration(0) (
        ctl_q := MySystem`arm.env_q;
    );
    
    public EnsureSafeAngle : () ==> ()
    EnsureSafeAngle() == duration(0) (
        if ctl_q < MySystem`arm.N1 or ctl_q > MySystem`arm.N2 then (
           MotorOff();
        )
    );
    
    public MotorOn : () ==> ()
    MotorOn() == duration(0) (
        ctl_motorOn := true;
        MySystem`arm.env_motorOn := true;
    );

    public MotorOff : () ==> ()
    MotorOff() == (
        ctl_motorOn := false;
        MySystem`arm.env_motorOn := false;
    );

end Controller
