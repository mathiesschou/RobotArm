class RobotArm

types
    public Angle = real inv N == N >= 0 and N <= 1.6; -- begrænsning N ca 0 til 90 grader

values 
    g: real = 9.81;
    r: real = 0.8; -- arm lægnde i m
    mass: real = 1.2; -- kg
    Fc: real = 0.1; -- Coulomb friktionskoefficient
    Fv: real = 0.05; -- viskøs friktionskoefficient


instance variables
    public q: real; -- angle of roint. radianer
    public q_vel: real; -- hastighed. rad/s
    public q_acc: real; -- acceleration. rad/s^2

    --! PID controller
    public q_t: Angle; -- target - radianer
    public kp: real; -- proportional factor
    public kd: real; -- derivative factor
    public prevError: real; -- radianer

    public accumulatedTime: real; -- simuleret tid

operations
    public RobotArm: () ==> RobotArm
    RobotArm() == (
        q := 0;
        q_vel := 0; 
        q_t := 0; 
        kp := 0.1; 
        kd := 0.01;
        q_acc := 0; 
        prevError := 0; 
        accumulatedTime := 0; 
    );

    public SetTargetPosition: Angle ==> ()
    SetTargetPosition(target) == (
        q_t := target;
    );

    public SetCurrentPosition: Angle ==> ()
    SetCurrentPosition(position) == (
        q := position;
    );

    public SetKp: real ==> ()
    SetKp(k_p) == (
        kp := k_p;
    );

    public SetKd: real ==> ()
    SetKd(k_d) == (
        kd := k_d;
    );
    
    public Step: real ==> ()
    Step(delta) == duration(0) (
        dcl errorPos : real := q_t - q,
            errorDerivative : real := (errorPos - prevError) / delta,
            motorTorque : real := (kp * errorPos) + (kd * errorDerivative);
            dcl I : real := 2 * r * r; -- antager en standard inertimoment 2*r^2
        
        -- Update previous error
        prevError := errorPos;

        -- Update momvement values
        q_acc := motorTorque / I; -- antager uniform massefordeling armlængde meter. a = t / i
        q_vel := q_vel + q_acc * delta;
        q := q + q_vel * delta;

        -- Update time
        accumulatedTime := accumulatedTime + delta;

        --! Boundary conditions
        if q < 0 then q := 0
        elseif q > 1.6 then q := 1.6;
    );
    
end RobotArm